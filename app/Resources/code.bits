ValidationTextBox editor for dgrid

    editor: ValidationTextBox,
    editorArgs: {
        required: true,
        pattern: "^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$" 
    }


DGrid empty object handler for column

            groups: {
                label: core.groups,
                sortable: true,
                formatter: function (value, object) {
                    if( lib.isEmpty(value) ) {
                        return '';
                    } else {
                        return 'stuff';
                    }
                }
            },

DGrid formatter to convert a comma separated list to one separated by <br>
            roles: {
                label: core.roles,
                sortable: true,
                formatter: function (value, object) {
                    return value.join('<br>');
                }
            },

Get groups (in a controller)
            $groups = $this->get( 'fos_user.group_manager' )->findGroups();
            $groupNames = [];
            foreach( $groups as $g )
            {
                $groupNames[$g->getName()] = $g->getId();
            }

Groups in field (this needs to be different)
             ->add( 'groups', ChoiceType::class, [
                    'choices' => $data['group_names'],